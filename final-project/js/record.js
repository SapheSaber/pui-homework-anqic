document.addEventListener('DOMContentLoaded', function () {
    localStorage.clear();

    // Sample data for testing
    const sampleData = {
        "2024-11-19": { spending: 90, spendingType: "Clothing", saving: 20, savingType: "Salary" },
        "2024-11-12": { spending: 45, spendingType: "Food", saving: 50, savingType: "Salary" },
        "2024-12-03": { spending: 20, spendingType: "Clothing", saving: 0, savingType: "" },
        "2024-12-06": { spending: 100, spendingType: "Housing", saving: 200, savingType: "Bonus" },
        "2024-12-17": { spending: 30, spendingType: "Education", saving: 0, savingType: "" },
        "2024-12-15": { spending: 150, spendingType: "Other", saving: 300, savingType: "Part-Time Income" }
    };

    
    const records = JSON.parse(localStorage.getItem('financeRecords')) || {};
    const calendarContainer = document.querySelector('.calendar-records');
    const monthTitle = document.getElementById('month-title');
    const prevMonthBtn = document.getElementById('prev-month');
    const nextMonthBtn = document.getElementById('next-month');

    // dump the sample data to the localStorage
    for (const key in sampleData) {
        records[key] = sampleData[key]; 
    }
    console.log("Sample data added:", records);
    localStorage.setItem('financeRecords', JSON.stringify(records));

    

    // Set initial display month to the current month
    let currentDate = new Date();

    // this code generated by ChatGPT
    function formatMonthYear(date) {
        const options = { month: 'long', year: 'numeric' }; // Format month name and year (e.g., "January 2024")
        return date.toLocaleString('en-US', options);
    }

    // Display records for the selected month
    // this code generated by ChatGPT (line 21-34)
    function displayRecordsForMonth() {
        calendarContainer.innerHTML = ''; 

        const selectedMonthYear = formatMonthYear(currentDate);
        monthTitle.textContent = selectedMonthYear;

        // Filter records based on selected month and year
        const filteredRecords = Object.entries(records).filter(([date, data]) => {
            const recordDate = new Date(date);
            return (
                recordDate.getFullYear() === currentDate.getFullYear() &&
                recordDate.getMonth() === currentDate.getMonth()
            );
        });



        // Generate cards for each filtered record
        filteredRecords.forEach(([date, data]) => {
            const { spending, saving } = data;
            const netWorth = saving - spending;

            const card = document.createElement('div');
            card.classList.add('record-entry');

            let netWorthColor = '#141414';

            if (netWorth > 0) {
                card.classList.add('green-border');
                netWorthColor = '#145b17';
            } else if (netWorth < 0) {
                card.classList.add('red-border');
                netWorthColor = '#C0392B';
            } else {
                card.classList.add('gray-border');
            }

            card.innerHTML = `
                <p class="date">${new Date(date).toDateString()}</p>
                <p class="expense">-$${spending.toFixed(2)}</p>
                <p class="income">+$${saving.toFixed(2)}</p>
                <p class="net-change" style="color: ${netWorthColor};">Net change: $${netWorth.toFixed(2)}</p>
            `;

            calendarContainer.appendChild(card);
        });

        // No record in this month
        if (filteredRecords.length === 0) {
            const message = document.createElement('p');
            message.textContent = "No records found for this month.";
            message.style.color = '#888';
            calendarContainer.appendChild(message);
        }
    }

    console.log(localStorage.getItem('financeRecords'));

    // two features below are generated by ChatGPT
    function goToPreviousMonth() {
        currentDate.setMonth(currentDate.getMonth() - 1);
        displayRecordsForMonth();
    }

    function goToNextMonth() {
        currentDate.setMonth(currentDate.getMonth() + 1);
        displayRecordsForMonth();
    }

    prevMonthBtn.addEventListener('click', goToPreviousMonth);
    nextMonthBtn.addEventListener('click', goToNextMonth);

    displayRecordsForMonth();
});
